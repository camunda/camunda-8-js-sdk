name: Publish a new version

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm i

      - name: Build and Smoke Test
        run: npm run test:smoketest

      - name: Run Unit Tests
        run: |
          npm run test

  local_integration:
    runs-on: ubuntu-latest
    environment:
      name: selfhosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm install

      # Workaround for https://github.com/actions/runner-images/issues/2821
      - name: Remove mono blocking 8084 port
        run: sudo lsof -t -i:8084 | xargs -r sudo kill -9

      - name: Set up Docker
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username joshua.wulf --password-stdin registry.camunda.cloud

      - name: Set up Docker Compose
        run: |
          docker compose -f docker/docker-compose.yaml -f docker/docker-compose-modeler.yaml up -d
        timeout-minutes: 10

      - name: Run Integration Tests
        run: |
          npm run test:8.7:sm
        env:
          ZEEBE_GRPC_ADDRESS: grpc://localhost:26500
          ZEEBE_CLIENT_ID: zeebe
          ZEEBE_CLIENT_SECRET: zecret
          CAMUNDA_OAUTH_URL: http://localhost:18080/auth/realms/camunda-platform/protocol/openid-connect/token
          CAMUNDA_TASKLIST_BASE_URL: http://localhost:8082
          CAMUNDA_OPERATE_BASE_URL: http://localhost:8081
          CAMUNDA_OPTIMIZE_BASE_URL: http://localhost:8083
          CAMUNDA_MODELER_BASE_URL: http://localhost:8070/api

      - name: Cleanup
        if: always()
        run: docker compose -f docker/docker-compose.yaml -f docker/docker-compose-modeler.yaml down

  local_multitenancy_integration:
    runs-on: ubuntu-latest
    environment:
      name: selfhosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm install

      # Workaround for https://github.com/actions/runner-images/issues/2821
      - name: Remove mono blocking 8084 port
        run: sudo lsof -t -i:8084 | xargs -r sudo kill -9

      - name: Set up Docker
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username joshua.wulf --password-stdin registry.camunda.cloud

      - name: Set up Docker Compose
        run: |
          docker compose -f docker/docker-compose-multitenancy.yaml -f docker/docker-compose-modeler.yaml up -d
        timeout-minutes: 10

      - name: Run Integration Tests
        run: |
          npm run test:8.7:mt
        env:
          ZEEBE_GRPC_ADDRESS: grpc://localhost:26500
          ZEEBE_CLIENT_ID: zeebe
          ZEEBE_CLIENT_SECRET: zecret
          CAMUNDA_OAUTH_URL: http://localhost:18080/auth/realms/camunda-platform/protocol/openid-connect/token
          CAMUNDA_TASKLIST_BASE_URL: http://localhost:8082
          CAMUNDA_OPERATE_BASE_URL: http://localhost:8081
          CAMUNDA_OPTIMIZE_BASE_URL: http://localhost:8083
          CAMUNDA_MODELER_BASE_URL: http://localhost:8070/api
          # Needed for Multi-Tenancy
          CAMUNDA_TENANT_ID: <default>

      - name: Cleanup
        if: always()
        run: docker compose -f docker/docker-compose-multitenancy.yaml -f docker/docker-compose-modeler.yaml down

  saas_integration:
    runs-on: ubuntu-latest
    environment: integration
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run Integration Tests
        run: |
          npm run test:8.7:saas
        env:
          ZEEBE_REST_ADDRESS: ${{ vars.ZEEBE_REST_ADDRESS }}
          ZEEBE_GRPC_ADDRESS: ${{ vars.ZEEBE_GRPC_ADDRESS }}
          ZEEBE_CLIENT_ID: ${{ secrets.ZEEBE_CLIENT_ID }}
          ZEEBE_AUTHORIZATION_SERVER_URL: ${{ vars.ZEEBE_AUTHORIZATION_SERVER_URL }}
          ZEEBE_CLIENT_SECRET: ${{ secrets.ZEEBE_CLIENT_SECRET }}
          ZEEBE_TOKEN_AUDIENCE: ${{ vars.ZEEBE_TOKEN_AUDIENCE }}
          CAMUNDA_OAUTH_URL: ${{ vars.CAMUNDA_OAUTH_URL }}
          CAMUNDA_TASKLIST_BASE_URL: ${{ vars.CAMUNDA_TASKLIST_BASE_URL }}
          CAMUNDA_OPERATE_BASE_URL: ${{ vars.CAMUNDA_OPERATE_BASE_URL }}
          CAMUNDA_OPTIMIZE_BASE_URL: ${{ vars.CAMUNDA_OPTIMIZE_BASE_URL }}
          CAMUNDA_MODELER_BASE_URL: https://modeler.cloud.camunda.io/api
          CAMUNDA_CONSOLE_CLIENT_ID: ${{ secrets.CAMUNDA_CONSOLE_CLIENT_ID }}
          CAMUNDA_CONSOLE_CLIENT_SECRET: ${{ secrets.CAMUNDA_CONSOLE_CLIENT_SECRET }}
          CAMUNDA_CONSOLE_BASE_URL: ${{ vars.CAMUNDA_CONSOLE_BASE_URL }}
          CAMUNDA_CONSOLE_OAUTH_AUDIENCE: ${{ vars.CAMUNDA_CONSOLE_OAUTH_AUDIENCE}}

  saas_integration_8_8:
    runs-on: ubuntu-latest
    environment: integration-8.8
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run Integration Tests
        run: |
          npm run test:8.8:saas
        env:
          ZEEBE_REST_ADDRESS: ${{ vars.ZEEBE_REST_ADDRESS }}
          ZEEBE_GRPC_ADDRESS: ${{ vars.ZEEBE_GRPC_ADDRESS }}
          ZEEBE_CLIENT_ID: ${{ secrets.ZEEBE_CLIENT_ID }}
          ZEEBE_AUTHORIZATION_SERVER_URL: ${{ vars.ZEEBE_AUTHORIZATION_SERVER_URL }}
          ZEEBE_CLIENT_SECRET: ${{ secrets.ZEEBE_CLIENT_SECRET }}
          ZEEBE_TOKEN_AUDIENCE: ${{ vars.ZEEBE_TOKEN_AUDIENCE }}
          CAMUNDA_OAUTH_URL: ${{ vars.CAMUNDA_OAUTH_URL }}
          CAMUNDA_TASKLIST_BASE_URL: ${{ vars.CAMUNDA_TASKLIST_BASE_URL }}
          CAMUNDA_OPERATE_BASE_URL: ${{ vars.CAMUNDA_OPERATE_BASE_URL }}
          CAMUNDA_OPTIMIZE_BASE_URL: ${{ vars.CAMUNDA_OPTIMIZE_BASE_URL }}
          CAMUNDA_MODELER_BASE_URL: https://modeler.cloud.camunda.io/api
          CAMUNDA_CONSOLE_CLIENT_ID: ${{ secrets.CAMUNDA_CONSOLE_CLIENT_ID }}
          CAMUNDA_CONSOLE_CLIENT_SECRET: ${{ secrets.CAMUNDA_CONSOLE_CLIENT_SECRET }}
          CAMUNDA_CONSOLE_BASE_URL: ${{ vars.CAMUNDA_CONSOLE_BASE_URL }}
          CAMUNDA_CONSOLE_OAUTH_AUDIENCE: ${{ vars.CAMUNDA_CONSOLE_OAUTH_AUDIENCE }}

  local_integration_8_8:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22" # Specify a Node.js version

      - name: Install dependencies
        run: npm install

      # Workaround for https://github.com/actions/runner-images/issues/2821
      - name: Remove mono blocking 8084 port
        run: sudo lsof -t -i:8084 | xargs -r sudo kill -9

      - name: Set up Docker Compose
        run: |
          docker compose -f docker/docker-compose-8.8.yaml up -d

      - name: Wait for Services Healthy
        run: |
          set -e
          attempts=0
          max_attempts=60
          while [ $attempts -lt $max_attempts ]; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9600/actuator/health/status || true)
            [ "$code" = "200" ] && echo "Broker healthy" && break
            attempts=$((attempts+1))
            sleep 5
          done
          [ $attempts -ge $max_attempts ] && echo "Broker not healthy" && exit 1 || true

      - name: Run Integration Tests
        run: |
          npm run test:8.8:sm
        env:
          ZEEBE_GRPC_ADDRESS: grpc://localhost:26500
          CAMUNDA_AUTH_STRATEGY: NONE
          CAMUNDA_TENANT_ID: <default>

      - name: Cleanup
        if: always()
        run: docker compose -f docker/docker-compose-8.8.yaml down

  tag-and-publish:
    needs: [
        saas_integration,
        # saas_integration_windows,
        local_multitenancy_integration,
        local_integration,
        local_integration_8_8,
        saas_integration_8_8,
        unit-tests,
      ]
    runs-on: ubuntu-latest
    environment:
      name: publish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: "20"
          cache: "npm"
      - name: Install
        run: npm i
      - name: Build
        run: npm run build
      - name: Build Docs
        run: npm run docs
      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: Deploy Docs
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
