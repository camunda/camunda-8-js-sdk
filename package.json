{
	"name": "@camunda8/sdk",
	"version": "8.6.16",
	"description": "",
	"main": "dist/index.js",
	"scripts": {
		"build": "npm run clean && npm run compile && shx mkdir dist/proto && shx cp src/proto/zeebe.proto dist/proto/",
		"clean": "rm -rf ./dist && rm -f ./tsconfig.tsbuildinfo",
		"compile": "tsc --project tsconfig.json",
		"docs": "rm -rf ./docs && typedoc",
		"generate:grpc": "grpc_tools_node_protoc --plugin=protoc-gen-ts=./node_modules/.bin/protoc-gen-ts --js_out=import_style=commonjs,binary:./src/generated --grpc_out=./src/generated --ts_out=./src/generated -I ./src/proto ./src/proto/*.proto",
		"sm:start": "docker compose -f docker/docker-compose-multitenancy.yaml -f docker/docker-compose-modeler.yaml up -d",
		"sm:stop": "docker compose -f docker/docker-compose-multitenancy.yaml -f docker/docker-compose-modeler.yaml down",
		"test": "cross-env CAMUNDA_UNIT_TEST=true jest '\\.unit\\.' -u --detectOpenHandles --runInBand --testPathIgnorePatterns integration --testPathIgnorePatterns local-integration --testPathIgnorePatterns disconnection --testPathIgnorePatterns multitenancy --testPathIgnorePatterns __tests__/config",
		"test:integration": "jest --runInBand --testPathIgnorePatterns disconnection --testPathIgnorePatterns '\\.unit\\.' --testPathIgnorePatterns __tests__/config --testPathIgnorePatterns multitenancy --detectOpenHandles --verbose true -u",
		"test:multitenancy": "jest --runInBand --testPathIgnorePatterns disconnection --testPathIgnorePatterns admin --testPathIgnorePatterns '\\.unit\\.' --testPathIgnorePatterns __tests__/config - --detectOpenHandles --verbose true -u",
		"test:local": "jest --runInBand --verbose true --detectOpenHandles local-integration -u",
		"test:local-integration": "jest --runInBand --detectOpenHandles --verbose --testPathIgnorePatterns disconnection --testPathIgnorePatterns '\\.unit\\.' --testPathIgnorePatterns admin --testPathIgnorePatterns multitenancy --testPathIgnorePatterns __tests__/config -u",
		"test:docker": "jest --runInBand --testPathIgnorePatterns disconnection --testPathIgnorePatterns __tests__/config local-integration --detectOpenHandles --verbose true",
		"test:disconnect": "jest --runInBand --verbose true --detectOpenHandles --testPathIgnorePatterns __tests__/config disconnection",
		"test:smoketest": "npm run build && node smoke-test/smoke-test.js && npx tsd --typings dist/",
		"prepublishOnly": "npm run build && npm run test",
		"commit": "cz",
		"prepare": "husky install",
		"lint": "eslint 'src/**/*.{ts,tsx}'",
		"format": "prettier --write 'src/**/*.ts'"
	},
	"keywords": [
		"zeebe",
		"zeebe-node",
		"camunda",
		"automation",
		"bpmn",
		"camunda 8",
		"operate",
		"optimize",
		"tasklist",
		"web modeler",
		"modeler"
	],
	"private": false,
	"publishConfig": {
		"access": "public"
	},
	"author": "josh.wulf@camunda.com",
	"license": "Apache-2.0",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/camunda/camunda-8-js-sdk.git"
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged"
		}
	},
	"ts-jest": {
		"diagnostics": {
			"pretty": true,
			"debug": [
				"moduleResolution"
			]
		}
	},
	"jest": {
		"transform": {
			"^.+\\.(ts|tsx)$": [
				"ts-jest",
				{
					"tsconfig": "src/__tests__/tsconfig.json"
				}
			]
		},
		"preset": "ts-jest",
		"testEnvironment": "node",
		"testPathIgnorePatterns": [
			"/node_modules/",
			"__tests__/config/*.ts"
		],
		"globalSetup": "<rootDir>/src/__tests__/config/jest.globalSetup.ts",
		"globalTeardown": "<rootDir>/src/__tests__/config/jest.globalTeardown.ts"
	},
	"config": {
		"commitizen": {
			"path": "./node_modules/cz-conventional-changelog"
		}
	},
	"lint-staged": {
		"packages/**/*.ts": [
			"prettier --write"
		]
	},
	"tsd": {
		"directory": "test-d"
	},
	"devDependencies": {
		"@commitlint/cli": "^18.4.3",
		"@commitlint/config-conventional": "^18.4.3",
		"@semantic-release/changelog": "^6.0.3",
		"@semantic-release/git": "^10.0.1",
		"@sitapati/testcontainers": "^2.8.1",
		"@types/basic-auth": "^1.1.8",
		"@types/debug": "^4.1.12",
		"@types/express": "^4.17.21",
		"@types/jest": "^29.5.11",
		"@types/jsonwebtoken": "^9.0.6",
		"@types/lodash.mergewith": "^4.6.9",
		"@types/node": "^20.9.4",
		"@types/node-fetch": "^2.6.11",
		"@types/promise-retry": "^1.1.6",
		"@types/uuid": "^9.0.8",
		"@typescript-eslint/eslint-plugin": "^6.14.0",
		"@typescript-eslint/parser": "^6.14.0",
		"basic-auth": "^2.0.1",
		"commitizen": "^4.3.0",
		"cross-env": "^7.0.3",
		"cz-conventional-changelog": "^3.3.0",
		"eslint": "^8.55.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-plugin-import": "^2.29.1",
		"eslint-plugin-prettier": "^5.0.1",
		"express": "^4.19.2",
		"get-port-please": "^3.1.2",
		"grpc-tools": "^1.12.4",
		"husky": "^8.0.3",
		"jest": "^29.7.0",
		"jsonwebtoken": "^9.0.2",
		"lint-staged": "^15.2.0",
		"prettier": "^3.1.1",
		"semantic-release": "^22.0.12",
		"shx": "^0.3.4",
		"ts-jest": "^29.1.1",
		"ts-protoc-gen": "^0.15.0",
		"tsconfig-paths": "^4.2.0",
		"tsd": "^0.31.0",
		"typed-emitter": "^2.1.0",
		"typedoc": "^0.25.9",
		"typedoc-plugin-include-example": "^1.2.0",
		"typedoc-plugin-missing-exports": "^2.2.0",
		"typescript": "^5.3.3"
	},
	"optionalDependencies": {
		"win-ca": "3.5.1"
	},
	"dependencies": {
		"@grpc/grpc-js": "1.10.9",
		"@grpc/proto-loader": "0.7.13",
		"@types/form-data": "^2.2.1",
		"chalk": "^2.4.2",
		"console-stamp": "^3.0.2",
		"dayjs": "^1.8.15",
		"debug": "^4.3.4",
		"fast-xml-parser": "^4.1.3",
		"form-data": "^4.0.1",
		"got": "^11.8.6",
		"jwt-decode": "^4.0.0",
		"lodash.mergewith": "^4.6.2",
		"long": "^4.0.0",
		"lossless-json": "^4.0.1",
		"neon-env": "^0.1.3",
		"promise-retry": "^1.1.1",
		"reflect-metadata": "^0.2.1",
		"stack-trace": "0.0.10",
		"typed-duration": "^1.0.12",
		"uuid": "^7.0.3",
		"winston": "^3.14.2"
	}
}
